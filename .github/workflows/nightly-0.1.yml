name: Nightly Build
on:
  push:
  schedule:
    # * is a special character in YAML so you have to quote this string
    # run this build every night at 8:00pm Pacific time, 20h+(8 for UTC)
    - cron:  '0 4 * * *'
  workflow_dispatch:

#env:
  #LAGER_GATEWAY: ${{secrets.LAGER_GATEWAY}}
  #BUILD_RUN_NUMBER: ${{ github.run_number }}


jobs:
  get_build_name_with_sha:
    runs-on: ubuntu-latest
    outputs:
      BUILD_NAME_WITH_SHA: ${{ steps.get_ver_prefix.outputs.ver_prefix }}${{ env.BUILD_RUN_NUMBER }}_${{ steps.get_git_sha.outputs.git_sha }}
    steps:
      - name: Checkout the code (shallow)
        run: echo "more details......"

      - name: parse version.def
        run: echo "more details......"

      - id: get_ver_prefix
        run: echo "::set-output name=ver_prefix::${VERSION_MAJOR}.${VERSION_MINOR}${VERSION_FLAVOR}"

      - id: get_git_sha
        run: echo "::set-output name=git_sha::`echo ${GITHUB_SHA} | cut -c1-8`"

  build:
    needs: [get_build_name_with_sha]
    runs-on: ubuntu-latest

    #container:
    #  image: docker://chewielabs/devenv:version-1.6
    #  credentials:
    #    username: ${{ secrets.DOCKER_HUB_USERNAME }}
    #    password: ${{ secrets.DOCKER_HUB_TOKEN }}

    steps:
      - name: work around permission issue, GitHub Actions #760
        run: echo "more details......"

      - name: Checkout the code
        run: echo "more details......"

      - name: Build CLI, BLO
        run: echo "more details......"

      - name: Build ESP32 Project
        run: echo "more details......"

      - name: Build ESP32 Project release
        run: echo "more details......"

  host_unit_test:
    needs: [get_build_name_with_sha, build]
    runs-on: ubuntu-latest
    steps:
      - name: work around permission issue, GitHub Actions #760       
        run: echo "more details......"

  check_for_gateway:
    runs-on: aws-lager-runner
    name: Check for existance of a gateway
    #container:
    #  image: docker://lagerdata/lager-cli
    #  env:
    #    LAGER_TOKEN_ID: ${{ secrets.LAGER_TOKEN_ID }}
    #    LAGER_TOKEN_SECRET: ${{ secrets.LAGER_TOKEN_SECRET }}
    #outputs:
    #  gateway_state: ${{ steps.confirm_gateway_online.outputs.is_online }}
    steps:
      - id: confirm_gateway_online
        continue-on-error: true
        name: check if gateway is online
    #    run: lager gateway hello>/dev/null;if (test $? -gt 0); then echo "::set-output name=is_online::false"; fi
        run: echo "more details......"